name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies and build
      run: |
        npm install
        npm run build

    - name: Create deployment package
      run: |
        mkdir deploy
        cp -r dist deploy/
        cp -r node_modules deploy/
        cp package.json deploy/
        cp -r src deploy/
        echo "${{ secrets.ENV_BASE64 }}" | base64 -d > deploy/.env
        tar -czf app.tar.gz -C deploy .

    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: "app.tar.gz"
        target: "/home/ubuntu/"

    - name: Deploy on server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          echo "ðŸš€ Desplegando aplicaciÃ³n..."
          
          # Configurar PATH
          export PATH="/usr/local/bin:/usr/bin:/bin:$PATH"
          export NVM_DIR="$HOME/.nvm"
          if [ -s "$NVM_DIR/nvm.sh" ]; then
            . "$NVM_DIR/nvm.sh"
            nvm use node || nvm use default
          fi
          
          # Detener aplicaciÃ³n
          pm2 stop chatbox-omp 2>/dev/null || echo "App no corriendo"
          
          # Backup y limpiar
          if [ -d "/home/ubuntu/chatbox_omp" ]; then
            rm -rf /home/ubuntu/chatbox_omp_old
            mv /home/ubuntu/chatbox_omp /home/ubuntu/chatbox_omp_old
          fi
          
          # Extraer nueva versiÃ³n
          mkdir -p /home/ubuntu/chatbox_omp
          cd /home/ubuntu/chatbox_omp
          tar -xzf /home/ubuntu/app.tar.gz
          
          # Instalar PM2 si no existe
          if ! command -v pm2 &> /dev/null; then
            npm install -g pm2
          fi
          
          # Iniciar aplicaciÃ³n
          pm2 start dist/main.js --name "chatbox-omp" --time || pm2 restart chatbox-omp
          pm2 save
          
          # Verificar
          pm2 status chatbox-omp
          pm2 logs chatbox-omp --lines 5 --nostream
          
          # Limpiar
          rm -f /home/ubuntu/app.tar.gz
          
          echo "âœ… LISTO!" 